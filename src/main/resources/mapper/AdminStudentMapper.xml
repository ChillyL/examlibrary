<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chilly.examlibrary.mapper.AdminStudentMapper"><!--java的mapper路径-->


    <resultMap id="studentResult" type="com.chilly.examlibrary.entity.Student">
        <!--id column="表的主键字段，或者可以为查询语句中的别名字段"  property="映射pojo对象的主键属性" jdbcType="字段类型"(VARCHAR)) -->
        <id column="student_id" property="student_id" javaType="Long" jdbcType="BIGINT"/>
        <!--result column="表的一个字段（可以为任意表的一个字段）" jdbcType="字段类型" property="映射到pojo对象的一个属性（须为type定义的pojo对象中的一个属性）"-->
        <result column="student_name" property="student_name" javaType="String" jdbcType="VARCHAR"/>
        <result column="student_number" property="student_number" javaType="String" jdbcType="VARCHAR"/>
        <result column="student_password" property="student_password" javaType="String" jdbcType="VARCHAR"/>
        <result column="student_class" property="student_class" javaType="String" jdbcType="VARCHAR"/>

    </resultMap>

    <select id="listStudent" resultMap="studentResult">
        select student_id,student_name,student_number,student_password,student_class
        from student
    </select>

    <select id="getStudentByNumber" resultMap="studentResult" parameterType="string">
        select student_id,student_name,student_number,student_password,student_class
        from student
        where student_number =#{student_number}
    </select>

    <select id="getStudentById" resultMap="studentResult" parameterType="long">
        select student_id,student_name,student_number,student_password,student_class
        from student
        where student_id =#{student_id}
    </select>

    <select id="listStudentByNameOrClass" resultMap="studentResult" parameterType="com.chilly.examlibrary.entity.Student">
        -- bind 元素可以从 OGNL 表达式中创建一个变量并将其绑定到上下文
        <bind name="pattern" value="'%' + student_name + '%'"/>
        select student_id,student_name,student_number,student_password,student_class
        from student
        <where>
            <if test="student_name != null and student_name != ''">
                student_name like #{pattern}
            </if>
            <if test="student_class != null and student_class != ''">
                and student_class =#{student_class}
            </if>
        </where>
    </select>

    <insert id="addStudent"  parameterType="com.chilly.examlibrary.entity.Student">
        -- 新增后赋值给teacher_id
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="student_id">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into student
        (student_name,student_number,student_password,student_class)
        values
        (#{student_name},#{student_number},#{student_password},#{student_class})
    </insert>

    <update id="updateStudent" parameterType="com.chilly.examlibrary.entity.Student">
        update student set student_id=#{student_id},student_name=#{student_name},student_number=#{student_number},
        student_password=#{student_password},student_class=#{student_class}
        where student_id=#{student_id}
    </update>

    <delete id="deleteStudentById" parameterType="long">
        delete from student
        where student_id =#{student_id}
    </delete>

    <resultMap id="answerBookResult" type="com.chilly.examlibrary.entity.query.AnswerBookQuery">
        <result column="classify_id" property="classify_id" javaType="Long" jdbcType="BIGINT"/>
        <result column="classify_name" property="classify_name" javaType="String" jdbcType="VARCHAR"/>
        <result column="book_id" property="book_id" javaType="Long" jdbcType="BIGINT"/>
        <result column="book_title" property="book_title" javaType="String" jdbcType="VARCHAR"/>
        <result column="answer_id" property="answer_id" javaType="Long" jdbcType="BIGINT"/>
        <result column="answer_score" property="answer_score"/>
        <result column="student_id" property="student_id" javaType="Long" jdbcType="BIGINT"/>
    </resultMap>

    <select id="listStudentScore" parameterType="long" resultMap="answerBookResult">
        select c.classify_id,c.classify_name,b.book_id,b.book_title,a.answer_id,a.answer_score,a.answer_student_id
        from classify c,book b,answer a
        where c.classify_id = b.book_classify_id and b.book_id = a.answer_book_id
        and a.answer_student_id =#{studentId}
    </select>

</mapper>